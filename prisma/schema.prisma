// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  User
}

model User {
  id        String    @id @default(uuid()) @map("id")
  username  String    @unique @map("username")
  email     String    @unique @map("email")
  password  String    @map("password")
  role      Role      @default(User) @map("role")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  Article   Article[]

  @@index([username])
  @@map("users")
}

model Article {
  id         String   @id @default(uuid()) @map("id")
  title      String   @map("title")
  content    String   @map("content")
  userId     String?  @map("user_id")
  categoryId String   @map("category_id")
  image      String?  @map("image")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  user       User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  category   Category @relation(fields: [categoryId], references: [id])

  @@index([title])
  @@index([content])
  @@index([categoryId])
  @@index([userId])
  @@map("articles")
}

model Category {
  id        String    @id @default(uuid()) @map("id")
  name      String    @map("name")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  Article   Article[]

  @@index([name])
  @@map("categories")
}
